# -*- coding: utf-8 -*-
"""TORCH_DS_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c_CGHY6ldmZDDemFaNBGX1NF74da4YGD
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
#to ignore warnings
import warnings
warnings.filterwarnings('ignore')

data = pd.read_csv("/content/titanic.csv")

data.head()

data.tail()

data.info()

data.nunique()

data.isnull().sum()

(data.isnull().sum()/(len(data)))*100

data = data.drop(['PassengerId'], axis = 1)
data.info()

from datetime import date
date.today().year
data['Embarked']=date.today().year-data['Pclass']
data.head()

data['Name'] = data.Name.str.split().str.get(0)

data['sex'] = data.Name.str.split().str.get(1) + data.Name.str.split().str.get(2)

data[['Name','Sex','Embarked']]

print(data.Name.unique())
print(data.Name.nunique())

searchfor = ['Mineff, Mr. Ivan' ,'Nysveen, Mr. Johan Hansen','Charters, Mr. David' 'Zimmerman, Mr. Leo']
data[data.Name.str.contains('|'.join(searchfor))].head(5)

data.describe().T

data.describe(include='all').T

cat_cols=data.select_dtypes(include=['object']).columns
num_cols = data.select_dtypes(include=np.number).columns.tolist()
print("Categorical Variables:")
print(cat_cols)
print("Numerical Variables:")
print(num_cols)

for col in num_cols:
    print(col)
    print('Skew :', round(data[col].skew(), 2))
    plt.figure(figsize = (15, 4))
    plt.subplot(1, 2, 1)
    data[col].hist(grid=False)
    plt.ylabel('count')
    plt.subplot(1, 2, 2)
    sns.boxplot(x=data[col])
    plt.show()

fig, axes = plt.subplots(3, 2, figsize = (18, 18))
fig.suptitle('Bar plot for all categorical variables in the dataset')
sns.countplot(ax = axes[0, 0], x = 'Age', data = data, color = 'blue',
              order = data['Age'].value_counts().index);
sns.countplot(ax = axes[0, 1], x = 'SibSp', data = data, color = 'blue',
              order = data['SibSp'].value_counts().index);
sns.countplot(ax = axes[1, 0], x = 'Parch', data = data, color = 'blue',
              order = data['Parch'].value_counts().index);
sns.countplot(ax = axes[1, 1], x = 'Ticket', data = data, color = 'blue',
              order = data['Ticket'].value_counts().index);
sns.countplot(ax = axes[2, 0], x = 'Fare', data = data, color = 'blue',
              order = data['Fare'].head(20).value_counts().index);
sns.countplot(ax = axes[2, 1], x = 'Cabin', data = data, color = 'blue',
              order = data['Cabin'].head(20).value_counts().index);
axes[1][1].tick_params(labelrotation=45);
axes[2][0].tick_params(labelrotation=90);
axes[2][1].tick_params(labelrotation=90);

def log_transform(data,col):
    for colname in col:
        if (data[colname] == 1.0).all():
            data[colname + '_log'] = np.log(data[colname]+1)
        else:
            data[colname + '_log'] = np.log(data[colname])
    data.info()

plt.figure(figsize=(13,17))
sns.pairplot(data=data.drop(['Fare','Cabin'],axis=1))
plt.show()

plt.figure(figsize=(12, 7))
sns.heatmap(data.drop(['Fare','Cabin'],axis=1).corr(), annot = True, vmin = -1, vmax = 1)
plt.show()

